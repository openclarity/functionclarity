name: Release Go Binaries

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  CLI_PATH: ./cmd/function-clarity/
  LAMBDA_PATH: ./aws_function_pkg/

jobs:
  release-aws-lambda:
    name: Release AWS Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791

      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@cc44fee1591e49c86931a4a7458926ec441a85dd

      - uses: wangyoucao577/go-release-action@90da8ebfdc010a0e7d378419a76fd90230a05228
        with:
          goversion: https://go.dev/dl/go1.19.1.linux-amd64.tar.gz
          binary_name: aws_function
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: amd64
          project_path: "${{ env.LAMBDA_PATH }}"
          build_flags: -v
          overwrite: TRUE
          asset_name: "aws_function"
          ldflags: -X "main.appVersion=${{ env.APP_VERSION }}" -X "main.buildTime=${{ env.BUILD_TIME }}" -X main.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}

  release-cli:
    name: Release CLI
    needs: release-aws-lambda
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64 ]
        exclude:
          # windows/386 and darwin/386 seems useless
          - goarch: "386"
            goos: windows
          - goarch: "386"
            goos: darwin
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@cc44fee1591e49c86931a4a7458926ec441a85dd

      - uses: wangyoucao577/go-release-action@90da8ebfdc010a0e7d378419a76fd90230a05228
        with:
          goversion: https://go.dev/dl/go1.19.1.linux-amd64.tar.gz
          github_token: ${{ secrets.GITHUB_TOKEN }}
          extra_files: ./run_env/utils/unified-template.template
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "${{ env.CLI_PATH }}"
          build_flags: -v
          overwrite: TRUE
          ldflags: -X "main.appVersion=${{ env.APP_VERSION }}" -X "main.buildTime=${{ env.BUILD_TIME }}" -X main.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}